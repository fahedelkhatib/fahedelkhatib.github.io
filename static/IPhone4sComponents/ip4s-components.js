class IpBottomContainer extends HTMLElement{constructor(){super();const t=document.createElement("template");t.innerHTML='\n\t\t<div style="background-image: linear-gradient(hsla(0, 0%, 68%, 100%) 00%, hsl(232.5, 3.7%, 57.3%) 15%, hsl(232, 7.3%, 40.2%) 30%); padding: 16px;">\n\t\t\t<slot></slot>\n\t\t</div>\n\t\t',this._shadowRoot=this.attachShadow({mode:"open"}),this._shadowRoot.appendChild(t.content.cloneNode(!0))}}window.customElements.define("ip-bottom-container",IpBottomContainer);class IpButtonBlack extends HTMLElement{constructor(){super();const t=document.createElement("template");t.innerHTML='\n\t\t<style>\n\t\t\t.labelButtonBlack {\n\t\t\t\tborder-radius: 4px; \n\t\t\t\tfont-family: sans-serif;\n\t\t\t\tpadding: 8px; \n\t\t\t\ttext-align: center; \n\t\t\t\tfont-weight: bold; \n\t\t\t\tborder: 1px solid #444; \n\t\t\t\tbox-shadow: 0px 0px 2px grey;\n\t\t\t\tcolor: white;\n\t\t\t\ttext-shadow: 0px -1px 0px black;\n\t\t\t\tbackground-image: linear-gradient(hsl(210, 5%, 44%) 0%, hsl(214, 11%, 27%) 50%, hsl(216, 14%, 21%) 50%, hsl(231, 9%, 30%)); \n\t\t\t}\n\t\t\t\n\t\t\t.labelButtonBlack:hover {\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t\t\n\t\t\t.labelButtonBlack:active {\n\t\t\t\tbackground-image: linear-gradient(hsl(210, 5%, 34%) 0%, hsl(214, 11%, 17%) 50%, hsl(216, 14%, 11%) 50%, hsl(231, 9%, 20%)); \n\t\t\t}\n\t\t</style>\n\t\t\n\t\t\x3c!-- Button Black --\x3e\n\t\t<div class="labelButtonBlack"><slot></slot></div>\n\t\t',this._shadowRoot=this.attachShadow({mode:"open"}),this._shadowRoot.appendChild(t.content.cloneNode(!0)),this.$button=this._shadowRoot.querySelector("div")}}window.customElements.define("ip-button-black",IpButtonBlack);class IpButtonDropdownButton extends HTMLElement{constructor(){super();const t=document.createElement("template");t.innerHTML='\n\t\t<style>\n\t\t\t.buttonContainer {\n\t\t\t\tdisplay: flex; \n\t\t\t\tborder-top: 1px solid grey;\n\t\t\t\tcursor: pointer;\n\t\t\t\tcolor: black\n\t\t\t}\n\t\t\t\n\t\t\t.buttonContainer:active {\n\t\t\t\tbackground-color: #CCCCCC;\n\t\t\t}\n\t\t\t\n\t\t\t.buttonText {\n\t\t\t\tpadding: 8px; \n\t\t\t\tflex-grow: 1\n\t\t\t}\n\t\t\t\n\t\t\t.buttonArrow {\n\t\t\t\tpadding: 8px;\n\t\t\t\tfont-weight: bold;\n\t\t\t\tfont-family: sans-serif;\n\t\t\t}\n\t\t</style>\n\t\t\n\t\t<div class="buttonContainer">\n\t\t\t<div class="buttonText"><slot></slot></div>\n\t\t\t<div class="buttonArrow">&gt;</div>\n\t\t</div>\n\t\t',this._shadowRoot=this.attachShadow({mode:"open"}),this._shadowRoot.appendChild(t.content.cloneNode(!0))}get first(){return this.getAttribute("first")}set first(t){this.setAttribute("first",t)}static get observedAttributes(){return["first"]}attributeChangedCallback(t,n,e){switch(t){case"first":this._shadowRoot.querySelector(".buttonContainer").style.border="0px solid grey"}}}window.customElements.define("ip-button-dropdown",IpButtonDropdownButton);class IpButtonDropdownContainer extends HTMLElement{constructor(){super();const t=document.createElement("template");t.innerHTML='\n\t\t<style>\n\t\t\t.buttonDropdownContainer {\n\t\t\t\tdisplay: flex; \n\t\t\t\tflex-direction: column; \n\t\t\t\tborder-radius: 8px; \n\t\t\t\tborder: 1px solid grey; \n\t\t\t\tbox-shadow: 0px 0px 2px grey; \n\t\t\t\tbackground-color: white; \n\t\t\t\tfont-family: sans-serif;\n\t\t\t}\n\t\t</style>\n\t\t\n\t\t<div class="buttonDropdownContainer"><slot></slot></div>\n\t\t',this._shadowRoot=this.attachShadow({mode:"open"}),this._shadowRoot.appendChild(t.content.cloneNode(!0))}}window.customElements.define("ip-button-dropdown-container",IpButtonDropdownContainer);class IpButtonGreen extends HTMLElement{constructor(){super();const t=document.createElement("template");t.innerHTML='\n\t\t<style>\n\t\t\t.labelButtonGreen {\n\t\t\t\tborder-radius: 4px; \n\t\t\t\tfont-family: sans-serif; \n\t\t\t\tpadding: 8px; \n\t\t\t\ttext-align: center; \n\t\t\t\tfont-weight: bold; \n\t\t\t\tborder: 1px solid #444; \n\t\t\t\tbox-shadow: 0px 0px 2px grey;\n\t\t\t\tcolor: white; \n\t\t\t\ttext-shadow: 0px -1px 0px black;\n\t\t\t\tbackground-image: linear-gradient(hsl(115, 37%, 62%) 0%, hsl(122, 50%, 52%) 50%, hsl(122, 53%, 47%) 50%, hsl(124, 75%, 38%));\n\t\t\t}\n\t\t\t\n\t\t\t.labelButtonGreen:hover {\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t\t\n\t\t\t.labelButtonGreen:active {\n\t\t\t\tbackground-image: linear-gradient(hsl(115, 37%, 52%) 0%, hsl(122, 50%, 42%) 50%, hsl(122, 53%, 37%) 50%, hsl(124, 75%, 28%));\n\t\t\t}\n\t\t</style>\n\t\t\n\t\t\x3c!-- Button Green --\x3e\n\t\t<div class="labelButtonGreen"><slot></slot></div>\n\t\t',this._shadowRoot=this.attachShadow({mode:"open"}),this._shadowRoot.appendChild(t.content.cloneNode(!0)),this.$button=this._shadowRoot.querySelector("div")}}window.customElements.define("ip-button-green",IpButtonGreen);class IpButtonGrey extends HTMLElement{constructor(){super();const t=document.createElement("template");t.innerHTML='\n\t\t<style>\n\t\t\t.labelButtonGrey {\n\t\t\t\tborder-radius: 4px; \n\t\t\t\tfont-family: sans-serif; \n\t\t\t\tpadding: 8px; \n\t\t\t\ttext-align: center; \n\t\t\t\tfont-weight: bold; \n\t\t\t\tborder: 1px solid #444; \n\t\t\t\tbox-shadow: 0px 0px 2px grey;\n\t\t\t\tcolor: black; \n\t\t\t\tbackground-image: linear-gradient(hsl(240, 7%, 94%) 0%, hsl(220, 4%, 84%) 50%, hsl(228, 4%, 76%) 50%, hsl(228, 4%, 75%)); \n\t\t\t}\n\t\t\t\n\t\t\t.labelButtonGrey:hover {\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t\t\n\t\t\t.labelButtonGrey:active {\n\t\t\t\tbackground-image: linear-gradient(hsl(240, 7%, 84%) 0%, hsl(220, 4%, 74%) 50%, hsl(228, 4%, 66%) 50%, hsl(228, 4%, 65%)); \n\t\t\t}\n\t\t</style>\n\t\t\n\t\t\x3c!-- Button Grey --\x3e\n\t\t<div class="labelButtonGrey"><slot></slot></div>\n\t\t',this._shadowRoot=this.attachShadow({mode:"open"}),this._shadowRoot.appendChild(t.content.cloneNode(!0)),this.$button=this._shadowRoot.querySelector("div")}}window.customElements.define("ip-button-grey",IpButtonGrey);class IpButtonRed extends HTMLElement{constructor(){super();const t=document.createElement("template");t.innerHTML='\n\t\t<style>\n\t\t\t.labelButtonRed {\n\t\t\t\tborder-radius: 4px; \n\t\t\t\tfont-family: sans-serif; \n\t\t\t\tpadding: 8px; \n\t\t\t\ttext-align: center; \n\t\t\t\tfont-weight: bold; \n\t\t\t\tborder: 1px solid #444; \n\t\t\t\tbox-shadow: 0px 0px 2px grey;\n\t\t\t\tcolor: white;\n\t\t\t\ttext-shadow: 0px -1px 0px black; \n\t\t\t\tbackground-image: linear-gradient(hsl(356, 81%, 71%) 0%, hsl(357, 86%, 59%) 50%, hsl(354, 97%, 44%) 50%, hsl(358, 84%, 51%));\n\t\t\t}\n\t\t\t\n\t\t\t.labelButtonRed:hover {\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t\t\n\t\t\t.labelButtonRed:active { \n\t\t\t\tbackground-image: linear-gradient(hsl(356, 81%, 61%) 0%, hsl(357, 86%, 49%) 50%, hsl(354, 97%, 39%) 50%, hsl(358, 84%, 46%));\n\t\t\t}\n\t\t</style>\n\t\t\n\t\t\x3c!-- Button Red --\x3e\n\t\t<div class="labelButtonRed"><slot></slot></div>\n\t\t',this._shadowRoot=this.attachShadow({mode:"open"}),this._shadowRoot.appendChild(t.content.cloneNode(!0)),this.$button=this._shadowRoot.querySelector("div")}}window.customElements.define("ip-button-red",IpButtonRed);class IpButtonYellow extends HTMLElement{constructor(){super();const t=document.createElement("template");t.innerHTML='\n\t\t<style>\n\t\t\t.labelButtonYellow {\n\t\t\t\tborder-radius: 4px; \n\t\t\t\tfont-family: sans-serif; \n\t\t\t\tpadding: 8px; \n\t\t\t\ttext-align: center; \n\t\t\t\tfont-weight: bold; \n\t\t\t\tborder: 1px solid #444; \n\t\t\t\tbox-shadow: 0px 0px 2px grey;\n\t\t\t\tcolor: black; \n\t\t\t\tbackground-image: linear-gradient(hsl(50, 50%, 75%) 0%, hsl(44, 82%, 68%) 50%, hsl(44, 90%, 55%) 50%, hsl(51, 92%, 56%)); \n\t\t\t}\n\t\t\t\n\t\t\t.labelButtonYellow:hover {\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t\t\n\t\t\t.labelButtonYellow:active { \n\t\t\t\tbackground-image: linear-gradient(hsl(50, 50%, 65%) 0%, hsl(44, 82%, 68%) 45%, hsl(44, 90%, 46%) 50%, hsl(51, 92%, 45%)); \n\t\t\t}\n\t\t</style>\n\t\t\n\t\t\x3c!-- Button Yellow --\x3e\n\t\t<div class="labelButtonYellow"><slot></slot></div>\n\t\t',this._shadowRoot=this.attachShadow({mode:"open"}),this._shadowRoot.appendChild(t.content.cloneNode(!0)),this.$button=this._shadowRoot.querySelector("div")}}window.customElements.define("ip-button-yellow",IpButtonYellow);class IpDropDownSelection extends HTMLElement{constructor(){super();const t=document.createElement("template");t.innerHTML='\n\t\t<style>\n\t\t\t.dropdownButtonContainer {\n\t\t\t\tdisplay: flex; \n\t\t\t\tfont-family: sans-serif; \n\t\t\t\tcolor: black;\n\t\t\t}\n\t\t\t\n\t\t\t.dropdownButtonContainer:hover {\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t\t\n\t\t\t.dropdownSelectionContainer {\n\t\t\t\tpadding: 4px; \n\t\t\t\tflex-grow: 1; \n\t\t\t\tborder: 1px solid grey; \n\t\t\t\tborder-top-left-radius: 4px; \n\t\t\t\tborder-bottom-left-radius: 4px; \n\t\t\t\tbackground-image: linear-gradient(#f0f0f0, #d3d3d3);\n\t\t\t}\n\t\t\t\n\t\t\t.dropdownSelectionContainer:active {\n\t\t\t\tborder: 1px solid #353f93;\n\t\t\t}\n\t\t\t\n\t\t\t.dropdownArrowContainer {\n\t\t\t\tpadding: 4px; \n\t\t\t\tpadding-left: 16px; \n\t\t\t\tpadding-right: 16px; \n\t\t\t\tborder: 1px solid grey; \n\t\t\t\tborder-left: 0px solid grey; \n\t\t\t\tbackground-image: linear-gradient(#9f9f9f, #665f67); \n\t\t\t\tcolor: #fdfdfd; \n\t\t\t\ttext-shadow: 0px 1px 0px black; \n\t\t\t\tborder-top-right-radius: 4px; \n\t\t\t\tborder-bottom-right-radius: 4px;\n\t\t\t}\n\t\t\t\n\t\t\t.dropdownArrowContainer:active {\n\t\t\t\tborder: 1px solid #353f93;\n\t\t\t\tborder-left: 0px solid grey;\n\t\t\t\tbackground-image: linear-gradient(#9f9f9f, #665f67);\n\t\t\t}\n\t\t</style>\n\t\t\n\t\t<div class="dropdownButtonContainer">\n\t\t\t<div class="dropdownSelectionContainer"><slot></slot></div>\n\t\t\t<div class="dropdownArrowContainer">&#x25bc;</div>\n\t\t</div>\n\t\t',this._shadowRoot=this.attachShadow({mode:"open"}),this._shadowRoot.appendChild(t.content.cloneNode(!0)),this.$buttonContainer=this._shadowRoot.querySelector(".dropdownButtonContainer"),this.$buttonContainer.addEventListener("mousedown",t=>{this._shadowRoot.querySelector(".dropdownSelectionContainer").setAttribute("style","border: 1px solid #353f93;"),this._shadowRoot.querySelector(".dropdownArrowContainer").setAttribute("style","\n\t\t\t\tborder: 1px solid #353f93;\n\t\t\t\tborder-left: 0px solid grey;\n\t\t\t\tbackground-image: linear-gradient(#353f93, #6f78bb);\n\t\t\t")}),this.$buttonContainer.addEventListener("mouseup",t=>{this._shadowRoot.querySelector(".dropdownSelectionContainer").setAttribute("style",""),this._shadowRoot.querySelector(".dropdownArrowContainer").setAttribute("style","")})}}window.customElements.define("ip-drop-down-selection",IpDropDownSelection);class IpHeaderBar extends HTMLElement{constructor(){super();const t=document.createElement("template");t.innerHTML='\n\t\t<style>\n\t\t\t.headerContainer {\n\t\t\t\tcolor: white; \n\t\t\t\tfont-family: sans-serif; \n\t\t\t\tdisplay: flex; \n\t\t\t\tbackground-image: linear-gradient(#b5bfc9 0%, #8a9eb6 50%, #7f92b2 50%, #6d829f); \n\t\t\t\tpadding: 8px; \n\t\t\t\tborder-bottom: 1px solid #282f37; \n\t\t\t\tborder-top: 1px solid #e1e8ee;\n\t\t\t}\n\t\t\t\n\t\t\t.headerLeftButtonContainer {\n\t\t\t\tbackground-image: linear-gradient(hsl(217, 27%, 64%) 0%, hsl(213, 28%, 51%) 50%, hsl(216, 37%, 44%) 50%, hsl(215, 36%, 45%) 100%); \n\t\t\t\tmargin-left: 8px; \n\t\t\t\tpadding: 6px; \n\t\t\t\tpadding-left: 16px; \n\t\t\t\tpadding-right: 16px; \n\t\t\t\ttext-shadow: 0px -1px 0px black; \n\t\t\t\tfont-weight: bold; \n\t\t\t\tfont-size: 14px; \n\t\t\t\tdisplay: flex; \n\t\t\t\tborder: 1px solid #455971; \n\t\t\t\tborder-radius: 4px;\n\t\t\t}\n\t\t\t\n\t\t\t.headerLeftButtonContainer:hover {\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t\t\n\t\t\t.headerLeftButtonContainer:active {\n\t\t\t\tbackground-image: linear-gradient(hsl(217, 27%, 54%) 0%, hsl(213, 28%, 41%) 50%, hsl(216, 37%, 34%) 50%, hsl(215, 36%, 35%) 100%);\n\t\t\t}\n\t\t\t\n\t\t\t.headerLeftButtonText {\n\t\t\t\tmargin: auto;\n\t\t\t}\n\t\t\t\n\t\t\t.headerCenterButtonContainer {\n\t\t\t\tflex-grow: 1; \n\t\t\t\tdisplay: flex;\n\t\t\t}\n\t\t\t\n\t\t\t.headerCenterButtonText {\n\t\t\t\tmargin: auto; \n\t\t\t\tfont-size: 20px; \n\t\t\t\ttext-shadow: 0px -1px 0px black; \n\t\t\t\tfont-weight: bold;\n\t\t\t}\n\t\t\t\n\t\t\t.headerRightButtonContainer {\n\t\t\t\tbackground-image: linear-gradient(hsl(217, 27%, 64%) 0%, hsl(213, 28%, 51%) 50%, hsl(216, 37%, 44%) 50%, hsl(215, 36%, 45%) 100%);\n\t\t\t\tmargin-right: 8px; \n\t\t\t\tpadding: 6px; \n\t\t\t\tpadding-left: 16px; \n\t\t\t\tpadding-right: 16px; \n\t\t\t\ttext-shadow: 0px -1px 0px black; \n\t\t\t\tfont-weight: bold; \n\t\t\t\tfont-size: 14px; \n\t\t\t\tdisplay: flex; \n\t\t\t\tborder: 1px solid #455971; \n\t\t\t\tborder-radius: 4px;\n\t\t\t}\n\t\t\t\n\t\t\t.headerRightButtonContainer:hover {\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t\t\n\t\t\t.headerRightButtonContainer:active {\n\t\t\t\tbackground-image: linear-gradient(hsl(217, 27%, 54%) 0%, hsl(213, 28%, 41%) 50%, hsl(216, 37%, 34%) 50%, hsl(215, 36%, 35%) 100%);\n\t\t\t}\n\t\t\t\n\t\t\t.headerRightButtonText {\n\t\t\t\tmargin: auto;\n\t\t\t}\n\t\t</style>\n\t\t\n\t\t<div class="headerContainer">\n\t\t\t<div class="headerLeftButtonContainer"><div class="headerLeftButtonText"></div></div>\n\t\t\t<div class="headerCenterButtonContainer"><div class="headerCenterButtonText"><slot></slot></div></div>\n\t\t\t<div class="headerRightButtonContainer"><div class="headerRightButtonText"></div></div>\n\t\t</div>\n\t\t',this._shadowRoot=this.attachShadow({mode:"open"}),this._shadowRoot.appendChild(t.content.cloneNode(!0))}get leftbuttontext(){return this.getAttribute("leftbuttontext")}set leftbuttontext(t){this.setAttribute("leftbuttontext",t)}get rightbuttontext(){return this.getAttribute("rightbuttontext")}set rightbuttontext(t){this.setAttribute("rightbuttontext",t)}static get observedAttributes(){return["leftbuttontext","rightbuttontext"]}attributeChangedCallback(t,n,e){switch(t){case"leftbuttontext":this._shadowRoot.querySelector(".headerLeftButtonText").innerHTML=e;break;case"rightbuttontext":this._shadowRoot.querySelector(".headerRightButtonText").innerHTML=e}}}window.customElements.define("ip-header-bar",IpHeaderBar);class IpHeaderStatusBar extends HTMLElement{constructor(){super();const t=document.createElement("template");t.innerHTML='\n\t\t<style>\n\t\t\t.headerStatusBarContainer {\n\t\t\t\tdisplay: flex; \n\t\t\t\tborder-bottom: 1px solid #5e6367; \n\t\t\t\tbackground-image: linear-gradient(#edf5f8 0%, #bfc7ca 100%); \n\t\t\t\tfont-family: sans-serif; \n\t\t\t\tfont-weight: bold; \n\t\t\t\tfont-size: 14px;\n\t\t\t\tcolor: black;\n\t\t\t}\n\t\t\t\n\t\t\t.headerStatusLeftText {\n\t\t\t\tpadding-left: 4px;\n\t\t\t}\n\t\t\t\n\t\t\t.headerStatusCenterText {\n\t\t\t\tmargin: auto;\n\t\t\t}\n\t\t\t\n\t\t\t.headerStatusRightText {\n\t\t\t\tpadding-right: 4px;\n\t\t\t}\n\t\t</style>\n\t\t\n\t\t<div class="headerStatusBarContainer">\n\t\t\t<div class="headerStatusLeftText"></div>\n\t\t\t<div class="headerStatusCenterText"><slot></slot></div>\n\t\t\t<div class="headerStatusRightText"></div>\n\t\t</div>\n\t\t',this._shadowRoot=this.attachShadow({mode:"open"}),this._shadowRoot.appendChild(t.content.cloneNode(!0))}}window.customElements.define("ip-header-status-bar",IpHeaderStatusBar);class IpNotification extends HTMLElement{constructor(){super();const t=document.createElement("template");t.innerHTML='\n\t\t<div style="border-radius: 12px; background-image: linear-gradient(hsla(0, 0%, 72%, 100%) 00%, hsla(0, 0%, 48%, 100%) 20%, hsla(0, 0%, 10%, 100%) 40%); padding-top: 8px; padding-bottom: 8px; padding-left: 16px; padding-right: 16px; color: white; border: 1px solid #333; box-shadow: 0px 2px 6px #333; font-size: 1.25em; font-weight: bold; font-family: sans-serif;">\n\t\t\t<div><slot></slot></div>\n\t\t</div>\n\t\t',this._shadowRoot=this.attachShadow({mode:"open"}),this._shadowRoot.appendChild(t.content.cloneNode(!0))}}window.customElements.define("ip-notification",IpNotification);class IpPhone extends HTMLElement{constructor(){super();const t=document.createElement("template");t.innerHTML='\n\t\t<style>\n\t\t\t.topBar {\n\t\t\t\twidth: 400px; \n\t\t\t\theight: 32px; \n\t\t\t\tborder-top-left-radius: 32px; \n\t\t\t\tborder-top-right-radius: 32px; \n\t\t\t\tbackground-color: black;\n\t\t\t}\n\t\t\t\n\t\t\t.speakerBar {\n\t\t\t\twidth: 400px; \n\t\t\t\theight: 1px; \n\t\t\t\tbackground-color: black; \n\t\t\t\tdisplay: flex;\n\t\t\t}\n\t\t\t\n\t\t\t.topPaddingBar {\n\t\t\t\twidth: 400px; \n\t\t\t\theight: 16px; \n\t\t\t\tbackground-color: black;\n\t\t\t}\n\t\t\t\n\t\t\t.phoneContainer {\n\t\t\t\twidth: 380px; \n\t\t\t\theight: 500px; \n\t\t\t\tborder-left: 10px solid black; \n\t\t\t\tborder-right: 10px solid black; \n\t\t\t\toverflow-y: scroll;\n\t\t\t\tscrollbar-width: none;\n\t\t\t\tbackground-color: #e5e5e5;\n\t\t\t}\n\t\t\t\n\t\t\t.bottomPaddingBar {\n\t\t\t\twidth: 400px; \n\t\t\t\theight: 16px; \n\t\t\t\tbackground-color: black;\n\t\t\t}\n\t\t\t\n\t\t\t.bottomBar {\n\t\t\t\twidth: 400px; \n\t\t\t\theight: 32px; \n\t\t\t\tborder-bottom-left-radius: 32px; \n\t\t\t\tborder-bottom-right-radius: 32px; \n\t\t\t\tbackground-color: black; \n\t\t\t\tdisplay: flex;\n\t\t\t}\n\t\t</style>\n\t\t\n\t\t<div>\n\t\t\t<div class="topBar"></div>\n\t\t\t<div class="speakerBar"><div style="margin: auto; background-color: grey; width: 70px; height: 8px; border-radius: 8px; margin-top: -10px;"></div></div>\n\t\t\t<div class="topPaddingBar"></div>\n\t\t\t<div class="phoneContainer">\n\t\t\t\t\t\n\t\t\t\t<slot></slot>\n\t\t\t\t\t\n\t\t\t</div>\n\t\t\t<div class="bottomPaddingBar"></div>\n\t\t\t<div class="bottomBar"><div style="width: 32px; height: 32px; border-radius: 50%; background-color: grey; margin: auto; margin-top: -8px;"></div></div>\n\t\t</div>\n\t\t',this._shadowRoot=this.attachShadow({mode:"open"}),this._shadowRoot.appendChild(t.content.cloneNode(!0))}get pwidth(){return this.getAttribute("pwidth")}set pwidth(t){this.setAttribute("pwidth",t)}get pheight(){return this.getAttribute("pheight")}set pheight(t){this.setAttribute("pheight",t)}static get observedAttributes(){return["pwidth","pheight"]}attributeChangedCallback(t,n,e){switch(t){case"pwidth":this._shadowRoot.querySelector(".topBar").style.width=e,this._shadowRoot.querySelector(".speakerBar").style.width=e,this._shadowRoot.querySelector(".topPaddingBar").style.width=e,this._shadowRoot.querySelector(".phoneContainer").style.width=Number.parseInt(e)-20+"px",this._shadowRoot.querySelector(".bottomPaddingBar").style.width=e,this._shadowRoot.querySelector(".bottomBar").style.width=e;break;case"pheight":this._shadowRoot.querySelector(".phoneContainer").style.height=e}}}window.customElements.define("ip-phone-container",IpPhone);class IpPinBlueArrow extends HTMLElement{constructor(){super();const t=document.createElement("template");t.innerHTML='\n\t\t<style>\n\t\t\t.pinBlueArrowContainer {\n\t\t\t\twidth: 16px; \n\t\t\t\theight: 16px; \n\t\t\t\tborder: 2px solid white; \n\t\t\t\tborder-radius: 50%; \n\t\t\t\tdisplay: flex; \n\t\t\t\tcolor: white; \n\t\t\t\tbackground-image: linear-gradient(#6b9be2 0%, #5085da 50%, #276ed9 50%, #2b6cd5 100%); \n\t\t\t\tfont-weight: bold; \n\t\t\t\tfont-family: sans-serif; \n\t\t\t\tfont-size: 20px;\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t\t\n\t\t\t.pinBlueArrowContainer:active {\n\t\t\t\tbackground-image: linear-gradient(hsl(215.8,67.2%,60.3%) 0%, hsl(217,65.1%,53.4%) 50%, hsl(216.1,70.1%,45.2%) 50%, hsl(217.1,66.9%,45.2%) 100%);\n\t\t\t}\n\t\t\t\n\t\t\t.pinBlueArrowText {\n\t\t\t\tmargin: auto; \n\t\t\t\tmargin-top: -8px;\n\t\t\t}\n\t\t</style>\n\t\t\n\t\t<div class="pinBlueArrowContainer"><div class="pinBlueArrowText">&#xFE65;</div></div>\n\t\t',this._shadowRoot=this.attachShadow({mode:"open"}),this._shadowRoot.appendChild(t.content.cloneNode(!0))}}window.customElements.define("ip-pin-blue-arrow",IpPinBlueArrow);class IpPinBluePlus extends HTMLElement{constructor(){super();const t=document.createElement("template");t.innerHTML='\n\t\t<style>\n\t\t\t.pinBluePlusContainer {\n\t\t\t\twidth: 16px; \n\t\t\t\theight: 16px; \n\t\t\t\tborder: 2px solid white; \n\t\t\t\tborder-radius: 50%; \n\t\t\t\tdisplay: flex; \n\t\t\t\tcolor: white; \n\t\t\t\tbackground-image: linear-gradient(#6b9be2 0%, #5085da 50%, #276ed9 50%, #2b6cd5 100%); \n\t\t\t\tfont-weight: bold; \n\t\t\t\tfont-family: sans-serif; \n\t\t\t\tfont-size: 16px;\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t\t\n\t\t\t.pinBluePlusContainer:active {\n\t\t\t\tbackground-image: linear-gradient(hsl(215.8,67.2%,60.3%) 0%, hsl(217,65.1%,53.4%) 50%, hsl(216.1,70.1%,45.2%) 50%, hsl(217.1,66.9%,45.2%) 100%);\n\t\t\t}\n\t\t\t\n\t\t\t.pinBluePlusText {\n\t\t\t\tmargin: auto; \n\t\t\t\tmargin-top: -2px\n\t\t\t}\n\t\t</style>\n\t\t\n\t\t<div class="pinBluePlusContainer"><div class="pinBluePlusText">+</div></div>\n\t\t',this._shadowRoot=this.attachShadow({mode:"open"}),this._shadowRoot.appendChild(t.content.cloneNode(!0))}}window.customElements.define("ip-pin-blue-plus",IpPinBluePlus);class IpPinGreenPlus extends HTMLElement{constructor(){super();const t=document.createElement("template");t.innerHTML='\n\t\t<style>\n\t\t\t.pinGreenPlusContainer {\n\t\t\t\twidth: 16px; \n\t\t\t\theight: 16px; \n\t\t\t\tborder: 2px solid white; \n\t\t\t\tborder-radius: 50%; \n\t\t\t\tdisplay: flex; \n\t\t\t\tcolor: white; \n\t\t\t\tbackground-image: linear-gradient(#4fb049 0%, #38a735 50%, #1a9911 50%, #1e9218 100%); \n\t\t\t\tfont-weight: bold; \n\t\t\t\tfont-family: sans-serif; \n\t\t\t\tfont-size: 16px;\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t\t\n\t\t\t.pinGreenPlusContainer:active {\n\t\t\t\tbackground-image: linear-gradient(hsl(116.5,41.4%,43.8%) 0%, hsl(118.4,51.8%,38.1%) 50%, hsl(116,80%,28.3%) 50%, hsl(117,71.8%,28.3%) 100%);\n\t\t\t}\n\t\t\t\n\t\t\t.pinGreenPlusText {\n\t\t\t\tmargin: auto; \n\t\t\t\tmargin-top: -2px;\n\t\t\t}\n\t\t</style>\n\t\t\n\t\t<div class="pinGreenPlusContainer"><div class="pinGreenPlusText">+</div></div>\n\t\t',this._shadowRoot=this.attachShadow({mode:"open"}),this._shadowRoot.appendChild(t.content.cloneNode(!0))}}window.customElements.define("ip-pin-green-plus",IpPinGreenPlus);class IpPinRedMinus extends HTMLElement{constructor(){super();const t=document.createElement("template");t.innerHTML='\n\t\t<style>\n\t\t\t.pinRedMinusContainer {\n\t\t\t\twidth: 16px; \n\t\t\t\theight: 16px; \n\t\t\t\tborder: 2px solid white; \n\t\t\t\tborder-radius: 50%; \n\t\t\t\tdisplay: flex; \n\t\t\t\tcolor: white; \n\t\t\t\tbackground-image: linear-gradient(#d7737d 0%, #cc4a53 50%, #bb1c27 50%, #b51b1f 100%); \n\t\t\t\tfont-weight: bold; \n\t\t\t\tfont-family: sans-serif; \n\t\t\t\tfont-size: 16px;\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t\t\n\t\t\t.pinRedMinusContainer:active {\n\t\t\t\tbackground-image: linear-gradient(hsl(354,55.6%,59.7%) 0%, hsl(355.8,56%,49.5%) 50%, hsl(355.8,74%,37.2%) 50%, hsl(358.4,74%,35.8%) 100%);\n\t\t\t}\n\t\t\t\n\t\t\t.pinRedMinusText {\n\t\t\t\tmargin: auto; \n\t\t\t\tmargin-top: -2px;\n\t\t\t}\n\t\t</style>\n\t\t\n\t\t<div class="pinRedMinusContainer"><div class="pinRedMinusText">-</div></div>\n\t\t',this._shadowRoot=this.attachShadow({mode:"open"}),this._shadowRoot.appendChild(t.content.cloneNode(!0))}}window.customElements.define("ip-pin-red-minus",IpPinRedMinus);class IpPopupBox extends HTMLElement{constructor(){super();const t=document.createElement("template");t.innerHTML='\n\t\t<style>\n\t\t\t.alertContainer {\n\t\t\t\tborder: 2px solid #cacacc; \n\t\t\t\tborder-radius: 8px; \n\t\t\t\tbackground-image: linear-gradient(#61697b 0%, #404964 23%, #212c4a 30%, #1b2643 100%); \n\t\t\t\tdisplay: flex; \n\t\t\t\tflex-direction: column; \n\t\t\t\talign-items: center; \n\t\t\t\tfont-family: sans-serif; \n\t\t\t\tcolor: white; \n\t\t\t\tbox-shadow: 0px 2px 6px #333;\n\t\t\t}\n\t\t\t\n\t\t\t.alertHeaderContiner {\n\t\t\t\tpadding: 16px; \n\t\t\t\tfont-size: 1.25em; \n\t\t\t\tfont-weight: bold; \n\t\t\t\ttext-shadow: 0px -1px 0px black;\n\t\t\t}\n\t\t\t\n\t\t\t.alertBodyContainer {\n\t\t\t\tmargin-left: 16px; \n\t\t\t\tmargin-right: 16px; \n\t\t\t\ttext-align: center;\n\t\t\t}\n\t\t\t\n\t\t\t.alertButtonContainer {\n\t\t\t\tdisplay: flex; \n\t\t\t\twidth: 100%; \n\t\t\t\tmargin-top: 16px;\n\t\t\t}\n\t\t\t\n\t\t\t.LeftButton {\n\t\t\t\ttext-shadow: 0px -1px 0px black; \n\t\t\t\tfont-weight: bold; \n\t\t\t\tmargin: 4px; \n\t\t\t\tpadding: 16px; \n\t\t\t\tflex-basis: 0; \n\t\t\t\tflex-grow: 1; \n\t\t\t\tbackground-image: linear-gradient(hsl(223, 14%, 57%) 0%, hsl(222, 23%, 36%) 50%, hsl(223, 29%, 30%) 50%, hsl(222, 36%, 26%) 100%); \n\t\t\t\tborder-radius: 4px; \n\t\t\t\tdisplay: flex; \n\t\t\t\tbox-shadow: 0px 0px 1px #777;\n\t\t\t}\n\t\t\t\n\t\t\t.LeftButton:hover {\n\t\t\t\tcursor: pointer;\t\n\t\t\t}\n\t\t\t\n\t\t\t.LeftButton:active {\n\t\t\t\tbackground-image: linear-gradient(hsl(223, 14%, 47%) 0%, hsl(222, 23%, 26%) 50%, hsl(223, 29%, 20%) 50%, hsl(222, 36%, 16%) 100%);\n\t\t\t}\n\t\t\t\n\t\t\t.alertCancelButtonText {\n\t\t\t\tmargin: auto;\n\t\t\t}\n\t\t\t\n\t\t\t.RightButton {\n\t\t\t\ttext-shadow: 0px -1px 0px black; \n\t\t\t\tfont-weight: bold; \n\t\t\t\tmargin: 4px; \n\t\t\t\tpadding: 16px; \n\t\t\t\tflex-basis: 0; \n\t\t\t\tflex-grow: 1; \n\t\t\t\tbackground-image: linear-gradient(hsl(223, 16%, 74%) 0%, hsl(221, 14%, 52%) 50%, hsl(222, 16%, 45%) 50%, hsl(221, 18%, 43%) 100%); \n\t\t\t\tborder-radius: 4px; \n\t\t\t\tdisplay: flex; \n\t\t\t\tbox-shadow: 0px 0px 1px #777; \n\t\t\t}\n\t\t\t\n\t\t\t.RightButton:hover {\n\t\t\t\tcursor: pointer;\t\n\t\t\t}\n\t\t\t\n\t\t\t.RightButton:active {\n\t\t\t\tbackground-image: linear-gradient(hsl(223, 16%, 64%) 0%, hsl(221, 14%, 42%) 50%, hsl(222, 16%, 35%) 50%, hsl(221, 18%, 33%) 100%);\n\t\t\t}\n\t\t\t\n\t\t\t.alertConfirmButtonText {\n\t\t\t\tmargin: auto;\t\n\t\t\t}\n\t\t</style>\n\t\t\n\t\t<div class="alertContainer">\n\t\t\t<div class="alertHeaderContiner"></div>\n\t\t\t<div class="alertBodyContainer"><slot></slot></div>\n\t\t\t<div class="alertButtonContainer">\n\t\t\t\t<div class="LeftButton"><div class="alertCancelButtonText">Cancel</div></div>\n\t\t\t\t<div class="RightButton"><div class="alertConfirmButtonText">Confirm</div></div>\n\t\t\t</div>\n\t\t</div>\n\t\t',this._shadowRoot=this.attachShadow({mode:"open"}),this._shadowRoot.appendChild(t.content.cloneNode(!0)),this.$title=this._shadowRoot.querySelector(".alertHeaderContiner"),this.$leftLabelContainer=this._shadowRoot.querySelector(".alertCancelButtonText"),this.$rightLabelContainer=this._shadowRoot.querySelector(".alertConfirmButtonText")}get leftlabel(){return this.getAttribute("leftlabel")}set leftlabel(t){this.setAttribute("leftlabel",t)}get rightlabel(){return this.getAttribute("rightlabel")}set rightlabel(t){this.setAttribute("rightlabel",t)}get boxtitle(){return this.getAttribute("boxtitle")}set boxtitle(t){this.setAttribute("boxtitle",t)}static get observedAttributes(){return["leftlabel","rightlabel","boxtitle"]}attributeChangedCallback(t,n,e){switch(t){case"boxtitle":this.$title.innerHTML=e;break;case"leftlabel":this.$leftLabelContainer.innerHTML=e;break;case"rightlabel":this.$rightLabelContainer.innerHTML=e}}}window.customElements.define("ip-popup-box",IpPopupBox);class IpScrollButtonContainer extends HTMLElement{constructor(){super();const t=document.createElement("template");t.innerHTML='\n\t\t<style>\n\t\t\t#scrollPickerContainer {\n\t\t\t\tbackground-image: linear-gradient(#9295a4 0%, #4b4d5a 50%, #1d1f2b 50%, #2b2934 100%);\n\t\t\t\tpadding: 1em;\n\t\t\t}\n\t\t\t\n\t\t\t#scrollPicker {\n\t\t\t\theight: 5em;\n\t\t\t\tpadding-left: 1.5em;\n\t\t\t\tbackground-color: white;\n\t\t\t\tbackground-image: linear-gradient(#6a6b6d 0%, hsla(0, 0%, 0%, 0%) 12%,hsla(0, 0%, 0%, 0%) 88%, #6a6b6d 100%);\n\t\t\t\toverflow: hidden;\n\t\t\t}\n\t\t\t\n\t\t\t#scrollContainer {\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t.scrollPickerItem {\n\t\t\t\tfont-family: sans-serif;\n\t\t\t\tcursor: pointer;\n\t\t\t\tfont-weight: bold;\n\t\t\t}\n\t\t\t.scrollPickerItem:hover {\n\t\t\t\tcolor: #3b4f8a;\n\t\t\t}\n\t\t\t\n\t\t</style>\n\t\t\n\t\t<div id="scrollPickerContainer">\n\t\t\t<div id="scrollPicker">\n\t\t\t\t<div id="scrollContainer">\n\t\t\t\t\t<slot></slot>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t',this._shadowRoot=this.attachShadow({mode:"open"}),this._shadowRoot.appendChild(t.content.cloneNode(!0)),this._shadowRoot.querySelector("#scrollPicker").addEventListener("wheel",t=>{t.preventDefault();let n=this._shadowRoot.querySelector("#scrollPicker"),e=this._shadowRoot.querySelector("#scrollContainer");if(""!==e.style.transform){let o=Number.parseInt(e.style.transform.split("(")[1].replace("px)",""));t.deltaY>0?e.setAttribute("style",`transform: translateY(${Math.min(o+t.deltaY,n.clientHeight/2)}px)`):e.setAttribute("style",`transform: translateY(${Math.max(o+t.deltaY,-(e.clientHeight-n.clientHeight/2))}px)`)}else e.setAttribute("style",`transform: translateY(${t.deltaY}px)`)})}}window.customElements.define("ip-scroll-button-container",IpScrollButtonContainer);class IpScrollButton extends HTMLElement{constructor(){super();const t=document.createElement("template");t.innerHTML='\n\t\t<style>\n\t\t\t.scrollPickerItem {\n\t\t\t\tfont-family: sans-serif;\n\t\t\t\tcursor: pointer;\n\t\t\t\tfont-weight: bold;\n\t\t\t}\n\t\t\t.scrollPickerItem:hover {\n\t\t\t\tcolor: #3b4f8a;\n\t\t\t}\n\t\t</style>\n\t\t\n\t\t<div class="scrollPickerItem"><slot></slot></div>\n\t\t',this._shadowRoot=this.attachShadow({mode:"open"}),this._shadowRoot.appendChild(t.content.cloneNode(!0))}}window.customElements.define("ip-scroll-button",IpScrollButton);class IpToggleButton extends HTMLElement{constructor(){super();const t=document.createElement("template");t.innerHTML='\n\t\t<style>\n\t\t\t.toggleButtonContainer {\n\t\t\t\tdisplay: flex; \n\t\t\t\tborder-radius: 16px; \n\t\t\t\tborder: 1px solid #6d6d6d; \n\t\t\t\tbackground-image: linear-gradient(#eee 0%, #fff 40%, #fff 100%); \n\t\t\t\tbox-shadow: 0px 0px 2px #333 inset;\n\t\t\t}\n\t\t\t\n\t\t\t.offButtonCircle {\n\t\t\t\tborder-radius: 50%; \n\t\t\t\tborder: 2px solid #6d6d6d; \n\t\t\t\twidth: 16px; \n\t\t\t\theight: 16p; \n\t\t\t\tbackground-image: linear-gradient(#dbdbdb, #fff);\n\t\t\t}\n\t\t\t\n\t\t\t.offButtonText {\n\t\t\t\tmargin-left: auto; \n\t\t\t\tpadding-right: 10px; \n\t\t\t\tfont-family: sans-serif; \n\t\t\t\tcolor: #5f5f5f; \n\t\t\t\tfont-weight: bold;\n\t\t\t}\n\t\t\t\n\t\t\t.onButtonCircle {\n\t\t\t\tborder-radius: 50%; \n\t\t\t\tborder: 2px solid #6d6d6d; \n\t\t\t\twidth: 16px; \n\t\t\t\theight: 16p; \n\t\t\t\tbackground-image: linear-gradient(#dbdbdb, #fff);\n\t\t\t}\n\t\t\t\n\t\t\t.onButtonText {\n\t\t\t\tmargin-right: auto; \n\t\t\t\tpadding-left: 10px; \n\t\t\t\tfont-family: sans-serif; \n\t\t\t\tcolor: white; \n\t\t\t\tfont-weight: bold;\n\t\t\t}\n\t\t</style>\n\t\t\n\t\t<div class="toggleButtonContainer">\n\t\t\t<div class="offButtonCircle"></div>\n\t\t\t<div class="offButtonText">OFF</div>\n\t\t</div>\n\t\t',this._shadowRoot=this.attachShadow({mode:"open"}),this._shadowRoot.appendChild(t.content.cloneNode(!0)),this.$toggleButtonContainer=this._shadowRoot.querySelector(".toggleButtonContainer"),this.$toggleButtonContainer.addEventListener("click",t=>{null!==this.$toggleButtonContainer.querySelector(".onButtonCircle")?null!==this.getAttribute("offvalue")?(this.$toggleButtonContainer.innerHTML=`<div class="offButtonCircle"></div><div class="offButtonText">${this.getAttribute("offvalue")}</div>`,this.$toggleButtonContainer.setAttribute("style","background-image: linear-gradient(#eee 0%, #fff 40%, #fff 100%);")):(this.$toggleButtonContainer.innerHTML='<div class="offButtonCircle"></div><div class="offButtonText">OFF</div>',this.$toggleButtonContainer.setAttribute("style","background-image: linear-gradient(#eee 0%, #fff 40%, #fff 100%);")):null!==this.getAttribute("onvalue")?(this.$toggleButtonContainer.innerHTML=`<div class="onButtonText">${this.getAttribute("onvalue")}</div><div class="onButtonCircle"></div>`,this.$toggleButtonContainer.setAttribute("style","background-image: linear-gradient(hsl(208, 100%, 45%) 0%, hsl(209, 100%, 47%) 40%, hsl(208, 82%, 64%) 100%);")):(this.$toggleButtonContainer.innerHTML='<div class="offButtonCircle"></div><div class="offButtonText">ON</div>',this.$toggleButtonContainer.setAttribute("style","background-image: linear-gradient(#eee 0%, #fff 40%, #fff 100%);"))})}get onvalue(){return this.getAttribute("onvalue")}set onvalue(t){null===t&&(t="ON"),this.setAttribute("onvalue",t)}get offvalue(){return this.getAttribute("offvalue")}set offvalue(t){null===t&&(t="OFF"),this.setAttribute("offvalue",t)}static get observedAttributes(){return["onvalue","offvalue"]}attributeChangedCallback(t,n,e){switch(t){case"offvalue":this._shadowRoot.querySelector(".offButtonText").innerHTML=e}}}window.customElements.define("ip-toggle-button",IpToggleButton);
